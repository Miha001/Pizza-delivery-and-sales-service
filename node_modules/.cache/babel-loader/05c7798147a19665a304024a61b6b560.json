{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Honor\\\\Desktop\\\\reactpizza\\\\src\\\\pages\\\\Home.jsx\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Categories, SortPopup, PizzaBlock, PizzaLoadingBlock } from \"../components\";\nimport { setCategory, setSortBy } from \"../redux/actions/filters\";\nimport { fetchPizzas } from \"../redux/actions/pizzas\";\nimport { addPizzaToCart } from \"../redux/actions/cart\";\nconst categoryNames = [\"Мясные\", \"Вегетарианская\", \"Гриль\", \"Острые\", \"Закрытые\"];\nconst sortIems = [{\n  name: \"популярности\",\n  type: \"popular\",\n  order: \"desc\"\n}, {\n  name: \"цене\",\n  type: \"price\",\n  order: \"desc\"\n}, {\n  name: \"алфавит\",\n  type: \"name\",\n  order: \"asc\"\n}];\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const items = useSelector(({\n    pizzas\n  }) => pizzas.items); // const cartItems = useSelector(({ cart }) => cart.items);\n  // const isLoaded = useSelector(({ pizzas }) => pizzas.isLoaded);\n  // const { category, sortBy } = useSelector(({ filters }) => filters);\n  // React.useEffect(() => {\n  //   dispatch(fetchPizzas());\n  // }, []);\n\n  const onSelectCategory = React.useCallback(index => {\n    dispatch(setCategory(index));\n  }, []);\n  const onSelectSortType = React.useCallback(type => {\n    dispatch(setSortBy(type));\n  }, []); // const handleAddPizzaToCart = (obj) => {\n  //   dispatch({\n  //     type: \"ADD_PIZZA_CART\",\n  //     payload: obj,\n  //   });\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content__top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Categories, {\n    activeCategory: category,\n    onClickCategory: onSelectCategory,\n    items: categoryNames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SortPopup, {\n    activeSortType: sortBy.type,\n    items: sortIems,\n    onClickSortType: onSelectSortType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"content__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, items && items.map(obj => /*#__PURE__*/React.createElement(PizzaBlock, Object.assign({\n    key: obj.id\n  }, obj.id, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 39\n    }\n  }))) // isLoaded &&\n  //   items.map((obj) => (\n  //     <PizzaBlock key={obj.id} isLoading={true} {...obj} />\n  //   ))\n\n  /* {isLoaded\r\n  ? items.map((obj) => (\r\n      <PizzaBlock\r\n        onClickAddPizza={handleAddPizzaToCart}\r\n        key={obj.id}\r\n        addedCount={cartItems[obj.id] && cartItems[obj.id].items.length}\r\n        {...obj}\r\n      />\r\n    ))\r\n  : Array(12)\r\n      .fill(0)\r\n      .map((_, index) => <PizzaLoadingBlock key={index} />)} */\n  ));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Honor/Desktop/reactpizza/src/pages/Home.jsx"],"names":["React","useSelector","useDispatch","Categories","SortPopup","PizzaBlock","PizzaLoadingBlock","setCategory","setSortBy","fetchPizzas","addPizzaToCart","categoryNames","sortIems","name","type","order","Home","dispatch","items","pizzas","onSelectCategory","useCallback","index","onSelectSortType","category","sortBy","map","obj","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SACEC,UADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,iBAJF,QAKO,eALP;AAOA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,0BAAvC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,MAAMC,aAAa,GAAG,CACpB,QADoB,EAEpB,gBAFoB,EAGpB,OAHoB,EAIpB,QAJoB,EAKpB,UALoB,CAAtB;AAOA,MAAMC,QAAQ,GAAG,CACf;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,IAAI,EAAE,SAA9B;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CADe,EAEf;AAAEF,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,OAAtB;AAA+BC,EAAAA,KAAK,EAAE;AAAtC,CAFe,EAGf;AAAEF,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,IAAI,EAAE,MAAzB;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAHe,CAAjB;;AAMA,SAASC,IAAT,GAAgB;AACd,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,KAAK,GAAGjB,WAAW,CAAC,CAAC;AAAEkB,IAAAA;AAAF,GAAD,KAAgBA,MAAM,CAACD,KAAxB,CAAzB,CAFc,CAId;AACA;AACA;AAEA;AACA;AACA;;AACA,QAAME,gBAAgB,GAAGpB,KAAK,CAACqB,WAAN,CAAmBC,KAAD,IAAW;AACpDL,IAAAA,QAAQ,CAACV,WAAW,CAACe,KAAD,CAAZ,CAAR;AACD,GAFwB,EAEtB,EAFsB,CAAzB;AAIA,QAAMC,gBAAgB,GAAGvB,KAAK,CAACqB,WAAN,CAAmBP,IAAD,IAAU;AACnDG,IAAAA,QAAQ,CAACT,SAAS,CAACM,IAAD,CAAV,CAAR;AACD,GAFwB,EAEtB,EAFsB,CAAzB,CAfc,CAmBd;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,cAAc,EAAEU,QADlB;AAEE,IAAA,eAAe,EAAEJ,gBAFnB;AAGE,IAAA,KAAK,EAAET,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,SAAD;AACE,IAAA,cAAc,EAAEc,MAAM,CAACX,IADzB;AAEE,IAAA,KAAK,EAAEF,QAFT;AAGE,IAAA,eAAe,EAAEW,gBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,eAaE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAbF,eAeE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIL,KAAK,IAAIA,KAAK,CAACQ,GAAN,CAAWC,GAAD,iBAAS,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,GAAG,CAACC;AAArB,KAA6BD,GAAG,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB,CAFb,CAGI;AACA;AACA;AACA;;AACA;;;;;;;;;;;;AAPJ,GAfF,CADF;AAuCD;;AAED,eAAeZ,IAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Categories,\r\n  SortPopup,\r\n  PizzaBlock,\r\n  PizzaLoadingBlock,\r\n} from \"../components\";\r\n\r\nimport { setCategory, setSortBy } from \"../redux/actions/filters\";\r\nimport { fetchPizzas } from \"../redux/actions/pizzas\";\r\nimport { addPizzaToCart } from \"../redux/actions/cart\";\r\n\r\nconst categoryNames = [\r\n  \"Мясные\",\r\n  \"Вегетарианская\",\r\n  \"Гриль\",\r\n  \"Острые\",\r\n  \"Закрытые\",\r\n];\r\nconst sortIems = [\r\n  { name: \"популярности\", type: \"popular\", order: \"desc\" },\r\n  { name: \"цене\", type: \"price\", order: \"desc\" },\r\n  { name: \"алфавит\", type: \"name\", order: \"asc\" },\r\n];\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(({ pizzas }) => pizzas.items);\r\n\r\n  // const cartItems = useSelector(({ cart }) => cart.items);\r\n  // const isLoaded = useSelector(({ pizzas }) => pizzas.isLoaded);\r\n  // const { category, sortBy } = useSelector(({ filters }) => filters);\r\n\r\n  // React.useEffect(() => {\r\n  //   dispatch(fetchPizzas());\r\n  // }, []);\r\n  const onSelectCategory = React.useCallback((index) => {\r\n    dispatch(setCategory(index));\r\n  }, []);\r\n\r\n  const onSelectSortType = React.useCallback((type) => {\r\n    dispatch(setSortBy(type));\r\n  }, []);\r\n\r\n  // const handleAddPizzaToCart = (obj) => {\r\n  //   dispatch({\r\n  //     type: \"ADD_PIZZA_CART\",\r\n  //     payload: obj,\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content__top\">\r\n        <Categories\r\n          activeCategory={category}\r\n          onClickCategory={onSelectCategory}\r\n          items={categoryNames}\r\n        />\r\n        <SortPopup\r\n          activeSortType={sortBy.type}\r\n          items={sortIems}\r\n          onClickSortType={onSelectSortType}\r\n        />\r\n      </div>\r\n      <h2 className=\"content__title\">Все пиццы</h2>\r\n\r\n      <div className=\"content__items\">\r\n        {\r\n          items && items.map((obj) => <PizzaBlock key={obj.id} {...obj.id} />)\r\n          // isLoaded &&\r\n          //   items.map((obj) => (\r\n          //     <PizzaBlock key={obj.id} isLoading={true} {...obj} />\r\n          //   ))\r\n          /* {isLoaded\r\n          ? items.map((obj) => (\r\n              <PizzaBlock\r\n                onClickAddPizza={handleAddPizzaToCart}\r\n                key={obj.id}\r\n                addedCount={cartItems[obj.id] && cartItems[obj.id].items.length}\r\n                {...obj}\r\n              />\r\n            ))\r\n          : Array(12)\r\n              .fill(0)\r\n              .map((_, index) => <PizzaLoadingBlock key={index} />)} */\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}