{"ast":null,"code":"// const initialState = {\n//   items: {},\n//   totalPrice: 0,\n//   totalCount: 0,\n// };\n// const getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\n// const _get = (obj, path) => {\n//   const [firstKey, ...keys] = path.split(\".\");\n//   return keys.reduce((val, key) => {\n//     return val[key];\n//   }, obj[firstKey]);\n// };\n// const getTotalSum = (obj, path) => {\n//   return Object.values(obj).reduce((sum, obj) => {\n//     const value = _get(obj, path);\n//     return sum + value;\n//   }, 0);\n// };\n// const cart = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"ADD_PIZZA_CART\": {\n//       const currentPizzaItems = !state.items[action.payload.id]\n//         ? [action.payload]\n//         : [...state.items[action.payload.id].items, action.payload];\n//       const newItems = {\n//         ...state.items,\n//         [action.payload.id]: {\n//           items: currentPizzaItems,\n//           totalPrice: getTotalPrice(currentPizzaItems),\n//         },\n//       };\n//       const totalCount = getTotalSum(newItems, \"items.length\");\n//       const totalPrice = getTotalSum(newItems, \"totalPrice\");\n//       return {\n//         ...state,\n//         items: newItems,\n//         totalCount,\n//         totalPrice,\n//       };\n//     }\n//     case \"REMOVE_CART_ITEM\": {\n//       const newItems = {\n//         ...state.items,\n//       };\n//       const currentTotalPrice = newItems[action.payload].totalPrice;\n//       const currentTotalCount = newItems[action.payload].items.length;\n//       delete newItems[action.payload];\n//       return {\n//         ...state,\n//         items: newItems,\n//         totalPrice: state.totalPrice - currentTotalPrice,\n//         totalCount: state.totalCount - currentTotalCount,\n//       };\n//     }\n//     case \"PLUS_CART_ITEM\": {\n//       const newObjItems = [\n//         ...state.items[action.payload].items,\n//         state.items[action.payload].items[0],\n//       ];\n//       const newItems = {\n//         ...state.items,\n//         [action.payload]: {\n//           items: newObjItems,\n//           totalPrice: getTotalPrice(newObjItems),\n//         },\n//       };\n//       const totalCount = getTotalSum(newItems, \"items.length\");\n//       const totalPrice = getTotalSum(newItems, \"totalPrice\");\n//       return {\n//         ...state,\n//         items: newItems,\n//         totalCount,\n//         totalPrice,\n//       };\n//     }\n//     case \"MINUS_CART_ITEM\": {\n//       const oldItems = state.items[action.payload].items;\n//       const newObjItems =\n//         oldItems.length > 1\n//           ? state.items[action.payload].items.slice(1)\n//           : oldItems;\n//       const newItems = {\n//         ...state.items,\n//         [action.payload]: {\n//           items: newObjItems,\n//           totalPrice: getTotalPrice(newObjItems),\n//         },\n//       };\n//       const totalCount = getTotalSum(newItems, \"items.length\");\n//       const totalPrice = getTotalSum(newItems, \"totalPrice\");\n//       return {\n//         ...state,\n//         items: newItems,\n//         totalCount,\n//         totalPrice,\n//       };\n//     }\n//     case \"CLEAR_CART\":\n//       return { totalPrice: 0, totalCount: 0, items: {} };\n//     default:\n//       return state;\n//   }\n// };\n// export default cart;","map":{"version":3,"sources":["C:/Users/Honor/Desktop/reactpizza/src/redux/reducers/cart.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// const initialState = {\r\n//   items: {},\r\n//   totalPrice: 0,\r\n//   totalCount: 0,\r\n// };\r\n\r\n// const getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\r\n\r\n// const _get = (obj, path) => {\r\n//   const [firstKey, ...keys] = path.split(\".\");\r\n//   return keys.reduce((val, key) => {\r\n//     return val[key];\r\n//   }, obj[firstKey]);\r\n// };\r\n\r\n// const getTotalSum = (obj, path) => {\r\n//   return Object.values(obj).reduce((sum, obj) => {\r\n//     const value = _get(obj, path);\r\n//     return sum + value;\r\n//   }, 0);\r\n// };\r\n\r\n// const cart = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case \"ADD_PIZZA_CART\": {\r\n//       const currentPizzaItems = !state.items[action.payload.id]\r\n//         ? [action.payload]\r\n//         : [...state.items[action.payload.id].items, action.payload];\r\n\r\n//       const newItems = {\r\n//         ...state.items,\r\n//         [action.payload.id]: {\r\n//           items: currentPizzaItems,\r\n//           totalPrice: getTotalPrice(currentPizzaItems),\r\n//         },\r\n//       };\r\n\r\n//       const totalCount = getTotalSum(newItems, \"items.length\");\r\n//       const totalPrice = getTotalSum(newItems, \"totalPrice\");\r\n\r\n//       return {\r\n//         ...state,\r\n//         items: newItems,\r\n//         totalCount,\r\n//         totalPrice,\r\n//       };\r\n//     }\r\n\r\n//     case \"REMOVE_CART_ITEM\": {\r\n//       const newItems = {\r\n//         ...state.items,\r\n//       };\r\n//       const currentTotalPrice = newItems[action.payload].totalPrice;\r\n//       const currentTotalCount = newItems[action.payload].items.length;\r\n//       delete newItems[action.payload];\r\n//       return {\r\n//         ...state,\r\n//         items: newItems,\r\n//         totalPrice: state.totalPrice - currentTotalPrice,\r\n//         totalCount: state.totalCount - currentTotalCount,\r\n//       };\r\n//     }\r\n\r\n//     case \"PLUS_CART_ITEM\": {\r\n//       const newObjItems = [\r\n//         ...state.items[action.payload].items,\r\n//         state.items[action.payload].items[0],\r\n//       ];\r\n//       const newItems = {\r\n//         ...state.items,\r\n//         [action.payload]: {\r\n//           items: newObjItems,\r\n//           totalPrice: getTotalPrice(newObjItems),\r\n//         },\r\n//       };\r\n\r\n//       const totalCount = getTotalSum(newItems, \"items.length\");\r\n//       const totalPrice = getTotalSum(newItems, \"totalPrice\");\r\n\r\n//       return {\r\n//         ...state,\r\n//         items: newItems,\r\n//         totalCount,\r\n//         totalPrice,\r\n//       };\r\n//     }\r\n\r\n//     case \"MINUS_CART_ITEM\": {\r\n//       const oldItems = state.items[action.payload].items;\r\n//       const newObjItems =\r\n//         oldItems.length > 1\r\n//           ? state.items[action.payload].items.slice(1)\r\n//           : oldItems;\r\n//       const newItems = {\r\n//         ...state.items,\r\n//         [action.payload]: {\r\n//           items: newObjItems,\r\n//           totalPrice: getTotalPrice(newObjItems),\r\n//         },\r\n//       };\r\n\r\n//       const totalCount = getTotalSum(newItems, \"items.length\");\r\n//       const totalPrice = getTotalSum(newItems, \"totalPrice\");\r\n\r\n//       return {\r\n//         ...state,\r\n//         items: newItems,\r\n//         totalCount,\r\n//         totalPrice,\r\n//       };\r\n//     }\r\n\r\n//     case \"CLEAR_CART\":\r\n//       return { totalPrice: 0, totalCount: 0, items: {} };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default cart;\r\n"]},"metadata":{},"sourceType":"module"}